# vim:fileencoding=utf-8:foldmethod=marker:syntax=kitty

kitty_mod super

# Remap super -> meta (aka ESC+) {{{

# Numbers row {{{

map super+` send_text all \x1b`
map super+1 send_text all \x1b1
map super+2 send_text all \x1b2
map super+3 send_text all \x1b3
map super+4 send_text all \x1b4
map super+5 send_text all \x1b5
map super+6 send_text all \x1b6
map super+7 send_text all \x1b7
map super+8 send_text all \x1b8
map super+9 send_text all \x1b9
map super+0 send_text all \x1b0
map super+- send_text all \x1b-
map super+= send_text all \x1b=

map super+shift+` send_text all \x1b~
map super+shift+1 send_text all \x1b!
map super+shift+2 send_text all \x1b@
map super+shift+3 send_text all \x1b#
map super+shift+4 send_text all \x1b$
map super+shift+5 send_text all \x1b%
map super+shift+6 send_text all \x1b^
map super+shift+7 send_text all \x1b&
map super+shift+8 send_text all \x1b*
map super+shift+9 send_text all \x1b(
map super+shift+0 send_text all \x1b)
map super+shift+- send_text all \x1b_
map super+shift+= send_text all \x1b+

# }}}

# qwerty row {{{

map super+q send_text all \x1bq
map super+w send_text all \x1bw
map super+e send_text all \x1be
map super+r send_text all \x1br
map super+t send_text all \x1bt
map super+y send_text all \x1by
map super+u send_text all \x1bu
map super+i send_text all \x1bi
map super+o send_text all \x1bo
map super+p send_text all \x1bp
map super+[ send_text all \x1b[
map super+] send_text all \x1b]
map super+0x2a send_text all \x1b\\

map super+shift+q send_text all \x1bQ
map super+shift+w send_text all \x1bW
map super+shift+e send_text all \x1bE
map super+shift+r send_text all \x1bR
map super+shift+t send_text all \x1bT
map super+shift+y send_text all \x1bY
map super+shift+u send_text all \x1bU
map super+shift+i send_text all \x1bI
map super+shift+o send_text all \x1bO
map super+shift+p send_text all \x1bP
map super+shift+[ send_text all \x1b{
map super+shift+] send_text all \x1b}
map super+shift+0x2a send_text all \x1b|

# }}}

# asdf row {{{

map super+a send_text all \x1ba
map super+s send_text all \x1bs
map super+d send_text all \x1bd
map super+f send_text all \x1bf
map super+g send_text all \x1bg
map super+h send_text all \x1bh
map super+j send_text all \x1bj
map super+k send_text all \x1bk
map super+l send_text all \x1bl
map super+; send_text all \x1b;
map super+' send_text all \x1b'

map super+shift+a send_text all \x1bA
map super+shift+s send_text all \x1bS
map super+shift+d send_text all \x1bD
map super+shift+f send_text all \x1bF
map super+shift+g send_text all \x1bG
map super+shift+h send_text all \x1bH
map super+shift+j send_text all \x1bJ
map super+shift+k send_text all \x1bK
map super+shift+l send_text all \x1bL
map super+shift+; send_text all \x1b:
map super+shift+' send_text all \x1b\"

# }}}

# zxcv row {{{

map super+z send_text all \x1bz
map super+x send_text all \x1bx
map super+c send_text all \x1bc
map super+v send_text all \x1bv
map super+b send_text all \x1bb
map super+n send_text all \x1bn
map super+m send_text all \x1bm
map super+, send_text all \x1b,
map super+. send_text all \x1b.
map super+/ send_text all \x1b/

map super+shift+z send_text all \x1bZ
map super+shift+x send_text all \x1bX
map super+shift+c send_text all \x1bC
map super+shift+v send_text all \x1bV
map super+shift+b send_text all \x1bB
map super+shift+n send_text all \x1bN
map super+shift+m send_text all \x1bM
map super+shift+, send_text all \x1b<
map super+shift+. send_text all \x1b>
map super+shift+/ send_text all \x1b?

# }}}

# }}}
